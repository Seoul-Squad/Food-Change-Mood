name: FoodChangeModeCICD

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build and Test
        run: ./gradlew build

      - name: Build, Test, Generate Coverage
        run: |
          ./gradlew clean build jacocoTestReport jacocoTestCoverageVerification

      - name: Extract Coverage
        id: extract-coverage
        run: |
          # Extract coverage percentage from JaCoCo report
          COVERAGE=$(grep -oP '<counter type="LINE" missed="\d+" covered="\d+" />' build/reports/jacoco/test/jacocoTestReport.xml | head -1 | grep -oP 'missed="\d+" covered="\d+"' | awk '{missed=$1; covered=$2; sub(/missed="/,"",missed); sub(/covered="/,"",covered); print (covered/(missed+covered)*100)}')
          COVERAGE=${COVERAGE:-0}
          echo "COVERAGE=$COVERAGE" >> $GITHUB_OUTPUT

      - name: Post Coverage Comment
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Format the comment
          COVERAGE=${{ steps.extract-coverage.outputs.COVERAGE }}
          COMMENT_BODY="## Code Coverage Report\n\nThere is no coverage information present for the files changed\n\n**TOTAL PROJECT COVERAGE** | **${COVERAGE}%** ðŸŸ¢"

          # Check if a previous comment exists (to update it)
          PREVIOUS_COMMENT=$(gh api -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
            --jq '.[] | select(.body | contains("Code Coverage Report")) | .id' | head -n 1)

          if [ -n "$PREVIOUS_COMMENT" ]; then
            # Update the existing comment
            gh api --method PATCH \
              -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository }}/issues/comments/$PREVIOUS_COMMENT \
              -f body="$COMMENT_BODY"
          else
            # Post a new comment
            gh api --method POST \
              -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
              -f body="$COMMENT_BODY"
          fi
