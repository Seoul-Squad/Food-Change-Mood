on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build, Test, Generate Coverage
        run: |
          ./gradlew clean build jacocoTestReport jacocoTestCoverageVerification

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get total coverage
        id: coverage
        run: |
          TOTAL_COVERAGE=$(grep -oP 'counter type="INSTRUCTION" missed="\d+" covered="\d+"' build/reports/jacoco/test/jacocoTestReport.xml | \
            awk -F'"' '{missed += $2; covered += $4} END {print (covered/(covered+missed))*100}')
          echo "Total Coverage: $TOTAL_COVERAGE%"
          echo "total_coverage=$TOTAL_COVERAGE" >> $GITHUB_ENV

      - name: Check if it's a pull request
        id: is_pr
        run: echo "is_pr=${{ github.event_name == 'pull_request' }}" >> $GITHUB_ENV

      - name: Get changed files
        id: changed-files
        if: env.is_pr == 'true'
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD > changed_files.txt
          cat changed_files.txt

      - name: Calculate changed files coverage
        id: changed-coverage
        if: env.is_pr == 'true'
        run: |
          FILE_COVERAGE=0
          FILE_COUNT=0
          while IFS= read -r file; do
            if [[ "$file" == *.kt ]]; then
              filename_no_ext="${file%.kt}"
              escaped_file=$(echo "$filename_no_ext" | sed 's/\//\\\//g')
              coverage=$(grep -oP "<sourcefile name=\"${file##*/}\".*?/>" build/reports/jacoco/test/jacocoTestReport.xml | \
                grep -oP 'line-rate="\K[0-9\.]+')
              if [[ ! -z "$coverage" ]]; then
                FILE_COVERAGE=$(echo "$FILE_COVERAGE + $coverage" | bc)
                FILE_COUNT=$((FILE_COUNT + 1))
              fi
            fi
          done < changed_files.txt
          
          if [[ $FILE_COUNT -gt 0 ]]; then
            CHANGED_FILES_COVERAGE=$(echo "scale=2; $FILE_COVERAGE / $FILE_COUNT * 100" | bc)
          else
            CHANGED_FILES_COVERAGE=0
          fi
          
          echo "Changed Files Coverage: $CHANGED_FILES_COVERAGE%"
          echo "changed_files_coverage=$CHANGED_FILES_COVERAGE" >> $GITHUB_ENV

      - name: Comment coverage report on PR
        if: env.is_pr == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const totalCoverage = process.env.total_coverage;
            const changedCoverage = process.env.changed_files_coverage;
            const prNumber = context.payload.pull_request.number;
            const body = `
            ## ðŸ“Š Coverage Report
            - Total Coverage: **${totalCoverage}%**
            - Changed Files Coverage: **${changedCoverage}%**
            `;
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
